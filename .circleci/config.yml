version: 2

steps: &steps
  steps:
    - checkout
    - run:
        name: Install libraries
        command: apt-get update && apt-get install -y --no-install-recommends libhdf5-dev
    - run:
        name: Install libraries for latex
        command: apt-get update && apt-get install -y --no-install-recommends texlive-fonts-recommended
    - run:
        name: Install package dependencies
        command: R -e "devtools::install_deps(dep = TRUE, dependencies = TRUE)"
    - run:
        name: Install package dependencies (hdf5r)
        command: R -e "require(hdf5r)" # "lapply(c('hdf5r','HDF5Array','DelayedArray'), require, character.only=TRUE)"
    - run:
        name: Check code style
        command: |
          R -e "if (!requireNamespace('styler', quietly = TRUE)) install.packages('styler')"
          R -e "result <- styler::style_pkg(dry = 'on'); if (!all(result[['changed']] == FALSE)) stop('Code is not styled according to styler rules')"
    - run:
        name: Build package
        command: R CMD build .
    - run:
        name: Check package
        command: R CMD check *tar.gz


jobs:
  releaseR4p1p2:
    docker:
      - image: rocker/verse:4.1.2
    <<: *steps
  # releaseR4.2.0:
  #   docker:
  #     - image: rocker/verse:4.2.0
  #   <<: *steps
  # develR:
  #   docker:
  #     - image: rocker/verse:devel
  #   <<: *steps

  deployable:
    docker:
      - image: busybox:latest
    steps:
      - run: echo Deploying!

  build_and_deploy:
    environment:
      TZ: "/usr/share/zoneinfo/America/New_York"
    docker:
      - image: cimg/base:2020.09
    # working_directory: tmp/src/modelarray_build    # the code will be check-ed out to here
    steps:
      - checkout
      - setup_remote_docker:
          version: docker24
          docker_layer_caching: true
      - run:
          name: Build Docker image
          no_output_timeout: 2h
          command: |
            # Build docker image
            docker build \
              --cache-from=pennlinc/modelarray_confixel \
              --rm=false \
              -t pennlinc/modelarray_confixel:latest \
              --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
              --build-arg VCS_REF=`git rev-parse HEAD` .
      - run:
          name: Deploy to Docker Hub
          no_output_timeout: 40m
          command: |
            if [[ -n "$DOCKER_PASS" ]]; then
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                docker tag pennlinc/modelarray_confixel pennlinc/modelarray_confixel:unstable
                docker push pennlinc/modelarray_confixel:unstable
                if [[ -n "$CIRCLE_TAG" ]]; then    # if exists
                  docker push pennlinc/modelarray_confixel:latest    # push to latest
                  docker tag pennlinc/modelarray_confixel pennlinc/modelarray_confixel:$CIRCLE_TAG    # tag with version from `git tag`
                  docker push pennlinc/modelarray_confixel:$CIRCLE_TAG   # push to tag
                fi
            fi


workflows:
  version: 2
  build_test_deploy:
    jobs:
      - releaseR4p1p2:
          filters:
            tags:
              only: /.*/
      # - releaseR4.2.0:
      #     filters:
      #       tags:
      #         only: /.*/
      # - develR:
      #     filters:
      #       tags:
      #         only: /.*/

      - deployable:
          requires:
            - releaseR4p1p2
            # - releaseR4.2.0
            # - develR
          filters:
            branches:
              only: main
            tags:   # make sure any `git tag` triggers the run
              only: /.*/

      - build_and_deploy:
          requires:
            - deployable
          filters:
            branches:
              only: main
            tags:   # make sure any `git tag` triggers the run
              only: /.*/


